# Generated by Django 5.0.4 on 2024-06-27 19:04

from django.db import migrations
from django.utils import timezone


def set_delivery_or_warranty_base_on_status_on_order(apps, schema_editor):
    order_model = apps.get_model('main_app', 'Order')

    all_orders = order_model.objects.all()

    for order in all_orders:
        if order.status == 'Pending':
            order.delivery = order.order_date + timezone.timedelta(days=3)
            order.save()
        elif order.status == 'Completed':
            order.warranty = '24 months'
            order.save()
        elif order.status == 'Cancelled':
            order.delete()


def reverse_delivery_and_warranty(apps, schema_editor):
    order_model = apps.get_model('main_app', 'Order')

    all_orders = order_model.objects.all()

    for order in all_orders:
        if order.status == 'Pending':
            order.delivery = None
        elif order.status == 'Completed':
            order.warranty = order_model._meta.get_field('warranty').default

    order_model.objects.bulk_update(all_orders, ['delivery', 'warranty'])


class Migration(migrations.Migration):
    dependencies = [
        ('main_app', '0015_order'),
    ]

    operations = [
        migrations.RunPython(set_delivery_or_warranty_base_on_status_on_order, reverse_delivery_and_warranty)
    ]
